{"version":3,"sources":["index.js"],"names":["DemoApp","calendarComponentRef","React","createRef","state","calendarWeekends","calendarEvents","title","start","Date","resourceId","calendarResources","id","toggleWeekends","setState","gotoPast","current","getApi","gotoDate","handleDateClick","arg","concat","addEvent","info","event_name","prompt","startStr","resource","addCycle","cycle_name","last_id","length","cycle_id","parseInt","deleteColumn","onClick","deleteCycle","className","this","defaultView","customButtons","addButton","text","click","headerToolbar","left","center","right","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","resourceTimelinePlugin","initialView","aspectRatio","resourceAreaColumns","headerContent","field","width","resources","select","editable","selectable","ref","weekends","events","dateClick","filter","x","Component","render","document","getElementById"],"mappings":"wRAYqBA,G,kNACnBC,qBAAuBC,IAAMC,Y,EAE7BC,MAAQ,CACNC,kBAAkB,EAClBC,eAAgB,CAEd,CAAEC,MAAO,YAAaC,MAAO,IAAIC,KAAQC,WAAY,OAEvDC,kBAAmB,CACjB,CAAEC,GAAI,IAAKL,MAAO,WAClB,CAAEK,GAAI,IAAKL,MAAO,WAClB,CAAEK,GAAI,IAAKL,MAAO,a,EA4DtBM,eAAiB,WACf,EAAKC,SAAS,CAEZT,kBAAmB,EAAKD,MAAMC,oB,EAIlCU,SAAW,WACS,EAAKd,qBAAqBe,QAAQC,SACxCC,SAAS,e,EAGvBC,gBAAkB,SAAAC,GAEd,EAAKN,SAAS,CAEZR,eAAgB,EAAKF,MAAME,eAAee,OAAO,CAE/Cd,MAAO,YACPC,MAAO,IAAIC,KACXC,WAAY,U,EAMpBY,SAAW,SAAAC,GAET,IAAIC,EAAaC,OAAO,2BACxB,EAAKX,SAAS,CACdR,eAAgB,EAAKF,MAAME,eAAee,OAAQ,CAACd,MAAOiB,EAAYhB,MAAOe,EAAKG,SAAUhB,WAAYa,EAAKI,SAASf,Q,EAIxHgB,SAAW,WACT,IAAIC,EAAaJ,OAAO,kBACpBK,EAAU,EAAK1B,MAAMO,kBAAkB,EAAKP,MAAMO,kBAAkBoB,OAAS,GAAGnB,GAChFoB,EAAWC,SAASH,EAAS,IAAM,EACvC,EAAKhB,SAAS,CACZH,kBAAmB,EAAKP,MAAMO,kBAAkBU,OAAQ,CAACT,GAAIoB,EAAUzB,MAAOsB,EAAYK,aAAc,4BAAQC,QAAS,WAAO,EAAKC,YAAYJ,KAAzC,kB,uDA9F1G,OACE,yBAAKK,UAAU,YACb,yBAAKA,UAAU,gBACb,4BAAQF,QAASG,KAAKzB,gBAAtB,mBADF,OAEE,4BAAQsB,QAASG,KAAKvB,UAAtB,4BAFF,kDAKA,yBAAKsB,UAAU,qBACb,kBAAC,IAAD,CACEE,YAAY,eACZ3B,GAAG,WAEH4B,cAAe,CACbC,UAAW,CACPC,KAAM,mBACNC,MAAOL,KAAKV,WAIlBgB,cAAiB,CACfC,KAAM,4BACNC,OAAQ,QACRC,MAAO,uFAETC,QAAS,CAACC,IAAeC,IAAgBC,IAAmBC,KAC5DC,YAAa,mBAEbC,YAAa,IACbC,oBAAqB,CAAC,CACpBC,cAAe,SACfC,MAAO,QACPC,MAAO,OAGT,CACEF,cAAe,GACfC,MAAO,eACPC,MAAO,QAGTC,UAAYrB,KAAKlC,MAAMO,kBAEvBiD,OAAQtB,KAAKhB,SACbuC,UAAU,EACVC,YAAY,EACZC,IAAKzB,KAAKrC,qBACV+D,SAAU1B,KAAKlC,MAAMC,iBACrB4D,OAAQ3B,KAAKlC,MAAME,eACnB4D,UAAW5B,KAAKnB,sB,kCAkDdP,GAIV0B,KAAKxB,SAAS,CAACH,kBAAmB2B,KAAKlC,MAAMO,kBAAkBwD,QAAO,SAAAC,GAAC,OAAIA,EAAExD,IAAMA,W,GAvHlDV,IAAMmE,YA6H3CC,iBAAO,kBAACtE,EAAD,MAAauE,SAASC,eAAe,U","file":"static/js/main.0dacd077.chunk.js","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\n\nimport \"./style.css\";\n\n\nexport default class DemoApp extends React.Component {\n  calendarComponentRef = React.createRef();\n\n  state = {\n    calendarWeekends: true,\n    calendarEvents: [\n      // initial event data\n      { title: \"Testastos\", start: new Date(), resourceId: 'c1' }\n    ],\n    calendarResources: [\n      { id: '1', title: 'Cycle 1'},\n      { id: '2', title: 'Cycle 2'},\n      { id: '3', title: 'Cycle 3'}\n    ]\n  };\n\n  render() {\n    return (\n      <div className=\"demo-app\">\n        <div className=\"demo-app-top\">\n          <button onClick={this.toggleWeekends}>toggle weekends</button>&nbsp;\n          <button onClick={this.gotoPast}>go to a date in the past</button>\n          &nbsp; (also, click a date/time to add an event)\n        </div>\n        <div className=\"demo-app-calendar\">\n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            id=\"calendar\"\n\n            customButtons={{\n              addButton: {\n                  text: 'Ajouter un cycle',\n                  click: this.addCycle,\n              },\n            }}\n\n            headerToolbar = {{\n              left: 'prev,next,today,addButton',\n              center: 'title',\n              right: 'resourceTimelineDay,resourceTimelineWeek,resourceTimelineMonth,resourceTimelineYear'\n            }}\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, resourceTimelinePlugin]}\n            initialView= 'resourceTimeline'\n\n            aspectRatio={1.5}\n            resourceAreaColumns={[{\n              headerContent: 'Cycles',\n              field: 'title',\n              width: '50%'\n              //cellContent: this.state.calendarResources[].title\n            },\n            {\n              headerContent: '',\n              field: 'deleteColumn',\n              width: '50%',\n            }\n            ]}\n            resources= {this.state.calendarResources}\n\n            select={this.addEvent}\n            editable={true}\n            selectable={true}\n            ref={this.calendarComponentRef}\n            weekends={this.state.calendarWeekends}\n            events={this.state.calendarEvents}\n            dateClick={this.handleDateClick}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  toggleWeekends = () => {\n    this.setState({\n      // update a property\n      calendarWeekends: !this.state.calendarWeekends\n    });\n  };\n\n  gotoPast = () => {\n    let calendarApi = this.calendarComponentRef.current.getApi();\n    calendarApi.gotoDate(\"2000-01-01\"); // call a method on the Calendar object\n  };\n\n  handleDateClick = arg => {\n    if ((\"Would you like to add an event to \" + arg.dateStr + \" ?\")) {\n      this.setState({\n        // add new event data\n        calendarEvents: this.state.calendarEvents.concat({\n          // creates a new array\n          title: \"New Event\",\n          start: new Date(),\n          resourceId: 'c1'\n        })\n      });\n    }\n  };\n\n  addEvent = info => {\n    //this.calendarComponentRef.events += {title: \"Test2\", start: new Date(), resourceId: 'c1'}\n    var event_name = prompt(\"Nom de l'Ã©venement :\")\n    this.setState({\n    calendarEvents: this.state.calendarEvents.concat( {title: event_name, start: info.startStr, resourceId: info.resource.id})\n    })\n  }\n\n  addCycle = () => {\n    let cycle_name = prompt('Nom du cycle :')\n    let last_id = this.state.calendarResources[this.state.calendarResources.length - 1].id\n    let cycle_id = parseInt(last_id, 10) + 1\n    this.setState({\n      calendarResources: this.state.calendarResources.concat( {id: cycle_id, title: cycle_name, deleteColumn: <button onClick={() => {this.deleteCycle(cycle_id)}}>Supprimer</button>} )\n    })\n  }\n\n  deleteCycle(id) {\n    //let index = this.state.calendarResources.findIndex(x => x.id == id)\n    //alert(index)\n    //this.setState({calendarResources: this.state.calendarResources.splice(index, 1)})\n    this.setState({calendarResources: this.state.calendarResources.filter(x => x.id != id)})\n    //FullCalendar.getResourceById(id).remove()\n  }\n\n}\n\nrender(<DemoApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}